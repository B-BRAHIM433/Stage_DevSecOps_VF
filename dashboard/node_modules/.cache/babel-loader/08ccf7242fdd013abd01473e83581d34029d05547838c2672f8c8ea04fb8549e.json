{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\DevSecOps\\\\projet-devsecops\\\\dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport { startScan, getScanResults } from \"./api\";\nimport ScanForm from \"./Components/ScanForm\";\nimport ScanStatus from \"./Components/ScanStatus\";\nimport VulnerabilityTable from \"./Components/VulnerabilityTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [scanId, setScanId] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [results, setResults] = useState(null);\n\n  // Poll scan results every 5 seconds\n  useEffect(() => {\n    if (!scanId) return;\n    const interval = setInterval(async () => {\n      const data = await getScanResults(scanId);\n      setStatus(data.status);\n      if (data.results) setResults(data.results);\n      if (data.status === \"completed\" || data.status === \"failed\") {\n        clearInterval(interval);\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [scanId]);\n  const handleStartScan = async repoUrl => {\n    const {\n      scan_id\n    } = await startScan(repoUrl);\n    setScanId(scan_id);\n    setStatus(\"running\");\n    setResults(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"DevSecOps Security Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScanForm, {\n      onStartScan: handleStartScan\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScanStatus, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VulnerabilityTable, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eN7ta/YmEO7GxcdrIBKyydIi6qE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","startScan","getScanResults","ScanForm","ScanStatus","VulnerabilityTable","jsxDEV","_jsxDEV","App","_s","scanId","setScanId","status","setStatus","results","setResults","interval","setInterval","data","clearInterval","handleStartScan","repoUrl","scan_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStartScan","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/DevSecOps/projet-devsecops/dashboard/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { startScan, getScanResults } from \"./api\";\r\nimport ScanForm from \"./Components/ScanForm\";\r\nimport ScanStatus from \"./Components/ScanStatus\";\r\nimport VulnerabilityTable from \"./Components/VulnerabilityTable\";\r\n\r\nfunction App() {\r\n  const [scanId, setScanId] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const [results, setResults] = useState(null);\r\n\r\n  // Poll scan results every 5 seconds\r\n  useEffect(() => {\r\n    if (!scanId) return;\r\n    const interval = setInterval(async () => {\r\n      const data = await getScanResults(scanId);\r\n      setStatus(data.status);\r\n      if (data.results) setResults(data.results);\r\n      if (data.status === \"completed\" || data.status === \"failed\") {\r\n        clearInterval(interval);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [scanId]);\r\n\r\n  const handleStartScan = async (repoUrl) => {\r\n    const { scan_id } = await startScan(repoUrl);\r\n    setScanId(scan_id);\r\n    setStatus(\"running\");\r\n    setResults(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">DevSecOps Security Dashboard</h1>\r\n      <ScanForm onStartScan={handleStartScan} />\r\n      <ScanStatus status={status} />\r\n      <VulnerabilityTable results={results} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,cAAc,QAAQ,OAAO;AACjD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,kBAAkB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,MAAM,EAAE;IACb,MAAMM,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACvC,MAAMC,IAAI,GAAG,MAAMhB,cAAc,CAACQ,MAAM,CAAC;MACzCG,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC;MACtB,IAAIM,IAAI,CAACJ,OAAO,EAAEC,UAAU,CAACG,IAAI,CAACJ,OAAO,CAAC;MAC1C,IAAII,IAAI,CAACN,MAAM,KAAK,WAAW,IAAIM,IAAI,CAACN,MAAM,KAAK,QAAQ,EAAE;QAC3DO,aAAa,CAACH,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMG,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMU,eAAe,GAAG,MAAOC,OAAO,IAAK;IACzC,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMrB,SAAS,CAACoB,OAAO,CAAC;IAC5CV,SAAS,CAACW,OAAO,CAAC;IAClBT,SAAS,CAAC,SAAS,CAAC;IACpBE,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACER,OAAA;IAAKgB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCjB,OAAA;MAAIgB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzErB,OAAA,CAACJ,QAAQ;MAAC0B,WAAW,EAAET;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CrB,OAAA,CAACH,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BrB,OAAA,CAACF,kBAAkB;MAACS,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACnB,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}