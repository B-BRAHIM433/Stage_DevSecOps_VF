{"ast":null,"code":"// import logo from './logo.svg';\n// import './App.css';\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n// export default App;\nimport{useEffect,useState}from\"react\";import{getScanResults,startScan}from\"./api\";import ScanForm from\"./Components/ScanForm\";import ScanStatus from\"./Components/ScanStatus\";import VulnerabilityTable from\"./Components/VulnerabilityTable\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[scanId,setScanId]=useState(null);const[status,setStatus]=useState(null);const[results,setResults]=useState(null);// Poll scan results every 5 seconds\nuseEffect(()=>{if(!scanId)return;const interval=setInterval(async()=>{const data=await getScanResults(scanId);setStatus(data.status);if(data.results)setResults(data.results);if(data.status===\"completed\"||data.status===\"failed\"){clearInterval(interval);}},5000);return()=>clearInterval(interval);},[scanId]);const handleStartScan=async repoUrl=>{const{scan_id}=await startScan(repoUrl);setScanId(scan_id);setStatus(\"running\");setResults(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 max-w-2xl mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"DevSecOps Security Dashboard\"}),/*#__PURE__*/_jsx(ScanForm,{onStartScan:handleStartScan}),/*#__PURE__*/_jsx(ScanStatus,{status:status}),/*#__PURE__*/_jsx(VulnerabilityTable,{results:results})]});}export default App;","map":{"version":3,"names":["useEffect","useState","getScanResults","startScan","ScanForm","ScanStatus","VulnerabilityTable","jsx","_jsx","jsxs","_jsxs","App","scanId","setScanId","status","setStatus","results","setResults","interval","setInterval","data","clearInterval","handleStartScan","repoUrl","scan_id","className","children","onStartScan"],"sources":["C:/Users/hp/Desktop/DevSecOps/projet-devsecops/dashboard/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\r\n// import './App.css';\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport { useEffect, useState } from \"react\";\r\nimport { getScanResults, startScan } from \"./api\";\r\nimport ScanForm from \"./Components/ScanForm\";\r\nimport ScanStatus from \"./Components/ScanStatus\";\r\nimport VulnerabilityTable from \"./Components/VulnerabilityTable\";\r\n\r\nfunction App() {\r\n  const [scanId, setScanId] = useState(null);\r\n  const [status, setStatus] = useState(null);\r\n  const [results, setResults] = useState(null);\r\n\r\n  // Poll scan results every 5 seconds\r\n  useEffect(() => {\r\n    if (!scanId) return;\r\n    const interval = setInterval(async () => {\r\n      const data = await getScanResults(scanId);\r\n      setStatus(data.status);\r\n      if (data.results) setResults(data.results);\r\n      if (data.status === \"completed\" || data.status === \"failed\") {\r\n        clearInterval(interval);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [scanId]);\r\n\r\n  const handleStartScan = async (repoUrl) => {\r\n    const { scan_id } = await startScan(repoUrl);\r\n    setScanId(scan_id);\r\n    setStatus(\"running\");\r\n    setResults(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">DevSecOps Security Dashboard</h1>\r\n      <ScanForm onStartScan={handleStartScan} />\r\n      <ScanStatus status={status} />\r\n      <VulnerabilityTable results={results} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,cAAc,CAAEC,SAAS,KAAQ,OAAO,CACjD,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,kBAAkB,KAAM,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACAD,SAAS,CAAC,IAAM,CACd,GAAI,CAACY,MAAM,CAAE,OACb,KAAM,CAAAM,QAAQ,CAAGC,WAAW,CAAC,SAAY,CACvC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAlB,cAAc,CAACU,MAAM,CAAC,CACzCG,SAAS,CAACK,IAAI,CAACN,MAAM,CAAC,CACtB,GAAIM,IAAI,CAACJ,OAAO,CAAEC,UAAU,CAACG,IAAI,CAACJ,OAAO,CAAC,CAC1C,GAAII,IAAI,CAACN,MAAM,GAAK,WAAW,EAAIM,IAAI,CAACN,MAAM,GAAK,QAAQ,CAAE,CAC3DO,aAAa,CAACH,QAAQ,CAAC,CACzB,CACF,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMG,aAAa,CAACH,QAAQ,CAAC,CACtC,CAAC,CAAE,CAACN,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAU,eAAe,CAAG,KAAO,CAAAC,OAAO,EAAK,CACzC,KAAM,CAAEC,OAAQ,CAAC,CAAG,KAAM,CAAArB,SAAS,CAACoB,OAAO,CAAC,CAC5CV,SAAS,CAACW,OAAO,CAAC,CAClBT,SAAS,CAAC,SAAS,CAAC,CACpBE,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,CAED,mBACEP,KAAA,QAAKe,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpClB,IAAA,OAAIiB,SAAS,CAAC,yBAAyB,CAAAC,QAAA,CAAC,8BAA4B,CAAI,CAAC,cACzElB,IAAA,CAACJ,QAAQ,EAACuB,WAAW,CAAEL,eAAgB,CAAE,CAAC,cAC1Cd,IAAA,CAACH,UAAU,EAACS,MAAM,CAAEA,MAAO,CAAE,CAAC,cAC9BN,IAAA,CAACF,kBAAkB,EAACU,OAAO,CAAEA,OAAQ,CAAE,CAAC,EACrC,CAAC,CAEV,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}