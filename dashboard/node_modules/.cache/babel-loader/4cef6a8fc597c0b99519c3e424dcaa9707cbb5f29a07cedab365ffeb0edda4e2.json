{"ast":null,"code":"import axios from\"axios\";const API_BASE=\"http://localhost:5000\";// Add axios configuration for browser\nconst axiosInstance=axios.create({baseURL:API_BASE,headers:{'Content-Type':'application/json'}});export const startScan=async repoUrl=>{const res=await axiosInstance.post('/start-scan',{repo_url:repoUrl});return res.data;};export const getScanResults=async scanId=>{const res=await axiosInstance.get(\"/scan-status/\".concat(scanId));return res.data;};","map":{"version":3,"names":["axios","API_BASE","axiosInstance","create","baseURL","headers","startScan","repoUrl","res","post","repo_url","data","getScanResults","scanId","get","concat"],"sources":["C:/Users/hp/Desktop/DevSecOps/projet-devsecops/dashboard/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = \"http://localhost:5000\";\n\n// Add axios configuration for browser\nconst axiosInstance = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport const startScan = async (repoUrl) => {\n  const res = await axiosInstance.post('/start-scan', { repo_url: repoUrl });\n  return res.data;\n};\n\nexport const getScanResults = async (scanId) => {\n  const res = await axiosInstance.get(`/scan-status/${scanId}`);\n  return res.data;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,QAAQ,CAAG,uBAAuB,CAExC;AACA,KAAM,CAAAC,aAAa,CAAGF,KAAK,CAACG,MAAM,CAAC,CACjCC,OAAO,CAAEH,QAAQ,CACjBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,OAAO,EAAK,CAC1C,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAN,aAAa,CAACO,IAAI,CAAC,aAAa,CAAE,CAAEC,QAAQ,CAAEH,OAAQ,CAAC,CAAC,CAC1E,MAAO,CAAAC,GAAG,CAACG,IAAI,CACjB,CAAC,CAED,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC9C,KAAM,CAAAL,GAAG,CAAG,KAAM,CAAAN,aAAa,CAACY,GAAG,iBAAAC,MAAA,CAAiBF,MAAM,CAAE,CAAC,CAC7D,MAAO,CAAAL,GAAG,CAACG,IAAI,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}