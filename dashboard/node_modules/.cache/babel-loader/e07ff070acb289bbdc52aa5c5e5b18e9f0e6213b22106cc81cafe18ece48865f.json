{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:5000\";\n\n// Add axios configuration for browser\nconst axiosInstance = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const startScan = async repoUrl => {\n  const res = await axiosInstance.post('/start-scan', {\n    repo_url: repoUrl\n  });\n  return res.data;\n};\nexport const getScanResults = async scanId => {\n  const res = await axiosInstance.get(`/scan-status/${scanId}`);\n  return res.data;\n};","map":{"version":3,"names":["axios","API_BASE","axiosInstance","create","baseURL","headers","startScan","repoUrl","res","post","repo_url","data","getScanResults","scanId","get"],"sources":["C:/Users/hp/Desktop/DevSecOps/projet-devsecops/dashboard/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = \"http://localhost:5000\";\n\n// Add axios configuration for browser\nconst axiosInstance = axios.create({\n  baseURL: API_BASE,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport const startScan = async (repoUrl) => {\n  const res = await axiosInstance.post('/start-scan', { repo_url: repoUrl });\n  return res.data;\n};\n\nexport const getScanResults = async (scanId) => {\n  const res = await axiosInstance.get(`/scan-status/${scanId}`);\n  return res.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;;AAExC;AACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;EAC1C,MAAMC,GAAG,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAC,aAAa,EAAE;IAAEC,QAAQ,EAAEH;EAAQ,CAAC,CAAC;EAC1E,OAAOC,GAAG,CAACG,IAAI;AACjB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,MAAML,GAAG,GAAG,MAAMN,aAAa,CAACY,GAAG,CAAC,gBAAgBD,MAAM,EAAE,CAAC;EAC7D,OAAOL,GAAG,CAACG,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}